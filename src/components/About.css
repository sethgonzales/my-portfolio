@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css');


.about {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0 50px;
}

.about-content {
  display: flex;
  flex-direction: row;
  width: 100%;
  align-items: flex-start;
}

.about-left-column {
  padding-top: 145px;
  flex: 1;
  margin-right: 20px;
  text-align: center;
}

.about-left-column img {
  width: 300px;
  border-top-left-radius: 80px 80px;
  border-bottom-right-radius: 80px 80px;
}

.about-right-column {
  padding: 20px;
  flex: 2;
}

.welcome {
  text-align: center;
  font-size: 300%;
}

.welcome h1 {
  margin-bottom: 30px;
}

.about-story p {
  text-align: justify;
  margin: 0;
  font-size: 24px;
  line-height: 1.5;
}

.connection-links {
  display: flex;
  justify-content: center;
  gap: 45px;
  margin-top: 20px;
}


.connection-link {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #474545;
  color: white;
  padding: 10px;
  font-size: 30px;
  text-align: center;
  text-decoration: none;
  border-radius: 50%;
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;

}

.connection-link:hover {
  cursor: pointer;
  background-color: #686868;
  color: #fed52e;
}


/* Animation keyframes for twinkling effect */
@keyframes twinkle {
  from {
    opacity: .5;
    transform: translateY(0) scale(.7);
  }

  to {
    opacity: 1;
    transform: translateY(20px) scale(1);
  }
}


.stars-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -1;
}

.stars {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.star1 {
  top: 120px;
  left: 75px;
  font-size: medium;
}

.star2 {
  top: 100px;
  left: 55px;
  font-size: small;
}

.star3 {
  top: 140px;
  left: 55px;
  font-size: larger;
}

.stars::before {
  content: 'âœ¦';
  position: absolute;
  color: #fff;
  animation: twinkle 2s linear infinite alternate;
}